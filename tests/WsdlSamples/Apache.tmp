Unit Apache;

{---------------------------------------------------------------------------
This file generated by the IndySoap WSDL -> Pascal translator

Source:   file://WsdlSamples\Apache.wsdl
Date:     14/08/2013 8:44:19 AM
IndySoap: V2.00-000
Notes:
   * Type "attribute" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Property of type ##any in Class configurationResponseType coded as TIdSoapRawXML. Consult doco for further information
   
   * Type "objectType" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "action" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "statisticSubscription" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "statisticValue" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "eventValue" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "statisticTypeInfo" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "objectType" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "timeProfile" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
   * Type "parameter" contains array elements that must be encoded in-line. You must set the 
     Encoding Option seoArraysInLine for any SOAP components that use or express this interface
   
---------------------------------------------------------------------------}

Interface

Uses
  IdSoapClient,
  IdSoapRawXML,
  IdSoapRpcPacket,
  IdSoapTypeRegistry;

Type
  eventValueTypeType = (fValue, lValue, unknownValue);
  statisticalProfileType = (statisticalProfile, timeProfile, filterProfile, timeRangeProfile);
  notificationModeEnum = (ChangesBased, TimeBased, ResetBased);
  timeIntervalType = (GrowingWindow, SlidingWindow, SelectionWindow);
  objectType = (Agent, Place, GroupAgents, GroupPlaces, GroupQueues, RegDN, Queue, RoutePoint);
  rfc2254 = type string;
  requestReference = type string;
  modeEnum = (Polling, Blocked);

  parameter = class;
  parameters = class;
  timeProfile_ = class;
  timeProfiles = class;
  statisticTypeInfoType = class;
  statisticInfos = class;
  profileInfo = class;
  retrieveStatisticalProfileResponse = class;
  retrieveStatisticResponse = class;
  eventValue = class;
  statisticValue = class;
  statisticValues = class;
  retrieveSubscribedStatisticsResponse = class;
  statisticSubscription = class;
  statisticSubscriptions = class;
  schedule = class;
  timeRangeType = class;
  timeInterval = class;
  actions = class;
  statisticType = class;
  metric = class;
  objectIdType = class;
  statistic = class;
  configurationResponseType = class;
  retrieveConfigurationResponse = class;
  configurationRequest = class;
  loginResponse = class;
  notification = class;
  identity = class;

  parameterArray = array of parameter;
  timeProfileArray = array of timeProfile_;
  statisticTypeInfoTypeArray = array of statisticTypeInfoType;
  statisticValueArray = array of statisticValue;
  eventValueArray = array of eventValue;
  statisticSubscriptionArray = array of statisticSubscription;
  objectTypeArray = array of objectType;

  parameter = class (TIdBaseSoapableClass)
  Private
    Fkey : string;
    Fvalue : string;
  Published
    property key : string read Fkey write Fkey;
    property value : string read Fvalue write Fvalue;
  end;

  parameters = class (TIdBaseSoapableClass)
  Private
    Fparameter : parameterArray;
  Public
    destructor Destroy; override;
    property parameter : parameterArray read Fparameter write Fparameter;
  end;

  timeProfile_ = class (TIdBaseSoapableClass)
  Private
    Fkey : string;
    FintervalType : timeIntervalType;
    Fvalue : string;
  Published
    property key : string read Fkey write Fkey;
    property intervalType : timeIntervalType read FintervalType write FintervalType;
    property value : string read Fvalue write Fvalue;
  end;

  timeProfiles = class (TIdBaseSoapableClass)
  Private
    FtimeProfile : timeProfileArray;
  Public
    destructor Destroy; override;
    property timeProfile : timeProfileArray read FtimeProfile write FtimeProfile;
  end;

  statisticTypeInfoType = class (TIdBaseSoapableClass)
  Private
    FtypeName : string;
    Ftype_ : eventValueTypeType;
    FobjectType : objectTypeArray;
  Public
    destructor Destroy; override;
    property objectType : objectTypeArray read FobjectType write FobjectType;
  Published
    property typeName : string read FtypeName write FtypeName;
    property type_ : eventValueTypeType read Ftype_ write Ftype_;
  end;

  statisticInfos = class (TIdBaseSoapableClass)
  Private
    FstatisticTypeInfo : statisticTypeInfoTypeArray;
  Public
    destructor Destroy; override;
    property statisticTypeInfo : statisticTypeInfoTypeArray read FstatisticTypeInfo write FstatisticTypeInfo;
  end;

  profileInfo = class (TIdBaseSoapableClass)
  Private
    FprofileType : statisticalProfileType;
    FstatisticInfos : statisticInfos;
    FtimeProfiles : timeProfiles;
    Ffilters : parameters;
    FtimeRanges : parameters;
  Published
    property profileType : statisticalProfileType read FprofileType write FprofileType;
    property statisticInfos : statisticInfos read FstatisticInfos write FstatisticInfos;
    property timeProfiles : timeProfiles read FtimeProfiles write FtimeProfiles;
    property filters : parameters read Ffilters write Ffilters;
    property timeRanges : parameters read FtimeRanges write FtimeRanges;
  end;

  retrieveStatisticalProfileResponse = class (TIdBaseSoapableClass)
  Private
    Freference : requestReference;
    FstatisticalProfileInfo : profileInfo;
  Published
    property reference : requestReference read Freference write Freference;
    property statisticalProfileInfo : profileInfo read FstatisticalProfileInfo write FstatisticalProfileInfo;
  end;

  retrieveStatisticResponse = class (TIdBaseSoapableClass)
  Private
    Freference : requestReference;
    FstatisticValue : statisticValue;
  Published
    property reference : requestReference read Freference write Freference;
    property statisticValue : statisticValue read FstatisticValue write FstatisticValue;
  end;

  eventValue = class (TIdBaseSoapableClass)
  Private
    Fdate : Comp;
    FintervalLength : Comp;
    FfValue : Single;
    FlValue : Comp;
    FunknownValue : string;
  Published
    property date : Comp read Fdate write Fdate;
    property intervalLength : Comp read FintervalLength write FintervalLength;
    property fValue : Single read FfValue write FfValue;
    property lValue : Comp read FlValue write FlValue;
    property unknownValue : string read FunknownValue write FunknownValue;
  end;

  statisticValue = class (TIdBaseSoapableClass)
  Private
    FstatisticId : string;
    FeventValue : eventValueArray;
  Public
    destructor Destroy; override;
    property eventValue : eventValueArray read FeventValue write FeventValue;
  Published
    property statisticId : string read FstatisticId write FstatisticId;
  end;

  statisticValues = class (TIdBaseSoapableClass)
  Private
    FstatisticValue : statisticValueArray;
  Public
    destructor Destroy; override;
    property statisticValue : statisticValueArray read FstatisticValue write FstatisticValue;
  end;

  retrieveSubscribedStatisticsResponse = class (TIdBaseSoapableClass)
  Private
    Freference : requestReference;
    FstatisticValues : statisticValues;
  Published
    property reference : requestReference read Freference write Freference;
    property statisticValues : statisticValues read FstatisticValues write FstatisticValues;
  end;

  statisticSubscription = class (TIdBaseSoapableClass)
  Private
    Fscope : Integer;
    FstatisticId : string;
  Published
    property scope : Integer read Fscope write Fscope;
    property statisticId : string read FstatisticId write FstatisticId;
  end;

  statisticSubscriptions = class (TIdBaseSoapableClass)
  Private
    FstatisticSubscription : statisticSubscriptionArray;
  Public
    destructor Destroy; override;
    property statisticSubscription : statisticSubscriptionArray read FstatisticSubscription write FstatisticSubscription;
  end;

  schedule = class (TIdBaseSoapableClass)
  Private
    FnotificationMode : notificationModeEnum;
    Ftimeout : Integer;
    Finsensitivity : Integer;
  Published
    property notificationMode : notificationModeEnum read FnotificationMode write FnotificationMode;
    property timeout : Integer read Ftimeout write Ftimeout;
    property insensitivity : Integer read Finsensitivity write Finsensitivity;
  end;

  timeRangeType = class (TIdBaseSoapableClass)
  Private
    FleftTime : Integer;
    FrightTime : Integer;
  Published
    property leftTime : Integer read FleftTime write FleftTime;
    property rightTime : Integer read FrightTime write FrightTime;
  end;

  timeInterval = class (TIdBaseSoapableClass)
  Private
    FintervalType : timeIntervalType;
    Flength : Integer;
    FslideLength : Integer;
    FtimeProfileName : string;
  Published
    property intervalType : timeIntervalType read FintervalType write FintervalType;
    property length : Integer read Flength write Flength;
    property slideLength : Integer read FslideLength write FslideLength;
    property timeProfileName : string read FtimeProfileName write FtimeProfileName;
  end;

  actions = class (TIdBaseSoapableClass)
  Private
    Faction : TStringArray;
  Public
    destructor Destroy; override;
    property action : TStringArray read Faction write Faction;
  end;

  statisticType = class (TIdBaseSoapableClass)
  Private
    FobjectType : objectTypeArray;
    Fcategory : string;
    Fsubject : string;
    FmainActions : actions;
    FrelativeActions : actions;
  Public
    destructor Destroy; override;
    property objectType : objectTypeArray read FobjectType write FobjectType;
  Published
    property category : string read Fcategory write Fcategory;
    property subject : string read Fsubject write Fsubject;
    property mainActions : actions read FmainActions write FmainActions;
    property relativeActions : actions read FrelativeActions write FrelativeActions;
  end;

  metric = class (TIdBaseSoapableClass)
  Private
    FtypeName : string;
    FstatisticType : statisticType;
    Finterval : timeInterval;
    FfilterName : string;
    FtimeRangeName : string;
    FtimeRange : timeRangeType;
  Published
    property typeName : string read FtypeName write FtypeName;
    property statisticType : statisticType read FstatisticType write FstatisticType;
    property interval : timeInterval read Finterval write Finterval;
    property filterName : string read FfilterName write FfilterName;
    property timeRangeName : string read FtimeRangeName write FtimeRangeName;
    property timeRange : timeRangeType read FtimeRange write FtimeRange;
  end;

  objectIdType = class (TIdBaseSoapableClass)
  Private
    Fid : string;
    FtenantName : string;
  Published
    property id : string read Fid write Fid;
    property tenantName : string read FtenantName write FtenantName;
  end;

  statistic = class (TIdBaseSoapableClass)
  Private
    FstatisticId : string;
    FobjectId : objectIdType;
    Fmetric : metric;
    Fschedule : schedule;
  Published
    property statisticId : string read FstatisticId write FstatisticId;
    property objectId : objectIdType read FobjectId write FobjectId;
    property metric : metric read Fmetric write Fmetric;
    property schedule : schedule read Fschedule write Fschedule;
  end;

TIdSoapRawXML
  retrieveConfigurationResponse = class (TIdBaseSoapableClass)
  Private
    Freference : requestReference;
    FconfigurationResponse : configurationResponseType;
  Published
    property reference : requestReference read Freference write Freference;
    property configurationResponse : configurationResponseType read FconfigurationResponse write FconfigurationResponse;
  end;

  configurationRequest = class (TIdBaseSoapableClass)
  Private
    Fcriteria : rfc2254;
    Fattribute : TStringArray;
  Public
    destructor Destroy; override;
    property attribute : TStringArray read Fattribute write Fattribute;
  Published
    property criteria : rfc2254 read Fcriteria write Fcriteria;
  end;

  loginResponse = class (TIdBaseSoapableClass)
  Private
    Freference : requestReference;
    Fsid : string;
  Published
    property reference : requestReference read Freference write Freference;
    property sid : string read Fsid write Fsid;
  end;

  notification = class (TIdBaseSoapableClass)
  Private
    Fmode : modeEnum;
    Ftimeout : Integer;
  Published
    property mode : modeEnum read Fmode write Fmode;
    property timeout : Integer read Ftimeout write Ftimeout;
  end;

  identity = class (TIdBaseSoapableClass)
  Private
    Fprincipal : string;
    Fcredentials : string;
  Published
    property principal : string read Fprincipal write Fprincipal;
    property credentials : string read Fcredentials write Fcredentials;
  end;


{!
  Name: statisticTypeInfoType.type_ = type;
  Type: actions = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: configurationRequest = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: configurationResponseType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: eventValue = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: eventValueArray = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: eventValueTypeType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: identity = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: loginResponse = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: metric = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: modeEnum = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: notification = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: notificationModeEnum = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: objectIdType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: objectType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: objectTypeArray = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: parameter = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: parameterArray = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: parameters = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: profileInfo = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: requestReference = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: retrieveConfigurationResponse = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: retrieveStatisticalProfileResponse = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: retrieveStatisticResponse = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: retrieveSubscribedStatisticsResponse = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: rfc2254 = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: schedule = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statistic = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticalProfileType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticInfos = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticSubscription = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticSubscriptionArray = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticSubscriptions = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticTypeInfoType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticTypeInfoTypeArray = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticValue = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticValueArray = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: statisticValues = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: timeInterval = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: timeIntervalType = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: timeProfile_ = timeProfile in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: timeProfileArray = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: timeProfiles = in http://www.genesyslab.com/services/statservice/types/2001/05;
  Type: timeRangeType = in http://www.genesyslab.com/services/statservice/types/2001/05;
}

type
  {Soap Address for this Interface: http://astro:8080/gis/services/statservice/soap-1}
  Istat = Interface (IIdSoapInterface) ['{67344F11-BF4F-4B8E-8DE6-D9A193BC34A6}']
       {!Namespace: http://www.genesyslab.com/services/statservice/types/2001/05}
      {&Genesys Statistical Service}
    procedure login(reference : string; identity : identity; notification : notification; out loginResult : loginResponse); stdcall;
      {!Request: login; }
    procedure logout(var reference : string; sid : string); stdcall;
      {!Request: logout; }
    procedure sessionUpdate(var reference : string; sid : string; notification : notification); stdcall;
      {!Request: sessionUpdate; }
    procedure retrieveConfiguration(reference : string; sid : string; configurationRequest : configurationRequest; out retrieveConfigurationResult : retrieveConfigurationResponse); stdcall;
      {!Request: retrieveConfiguration; }
    procedure subscribeStatistic(var reference : string; sid : string; statistic : statistic; resource : string); stdcall;
      {!Request: subscribeStatistic; }
    procedure unsubscribeStatistic(var reference : string; sid : string; statisticId : string); stdcall;
      {!Request: unsubscribeStatistic; }
    procedure retrieveSubscribedStatistics(reference : string; sid : string; subscriptions : statisticSubscriptions; out retrieveSubscribedStatisticsResult : retrieveSubscribedStatisticsResponse); stdcall;
      {!Request: retrieveSubscribedStatistics; }
    procedure retrieveStatistic(reference : string; sid : string; statistic : statistic; resource : string; out retrieveStatisticResult : retrieveStatisticResponse); stdcall;
      {!Request: retrieveStatistic; }
    procedure retrieveStatisticalProfile(reference : string; sid : string; resource : string; profileType : statisticalProfileType; out retrieveStatisticalProfileResult : retrieveStatisticalProfileResponse); stdcall;
      {!Request: retrieveStatisticalProfile; }
  end;

function GetIstat(AClient : TIdSoapBaseSender; ASetUrl : Boolean = true) : Istat;

Implementation

Uses
  IdSoapRTTIHelpers,
  IdSoapUtilities,
  SysUtils;

{ parameters }

destructor parameters.destroy;
begin
  IdSoapFreeAndNilArray(pointer(Fparameter), TypeInfo(parameterArray));
  inherited;
end;

{ timeProfiles }

destructor timeProfiles.destroy;
begin
  IdSoapFreeAndNilArray(pointer(FtimeProfile), TypeInfo(timeProfileArray));
  inherited;
end;

{ statisticTypeInfoType }

destructor statisticTypeInfoType.destroy;
begin
  IdSoapFreeAndNilArray(pointer(FobjectType), TypeInfo(objectTypeArray));
  inherited;
end;

{ statisticInfos }

destructor statisticInfos.destroy;
begin
  IdSoapFreeAndNilArray(pointer(FstatisticTypeInfo), TypeInfo(statisticTypeInfoTypeArray));
  inherited;
end;

{ statisticValue }

destructor statisticValue.destroy;
begin
  IdSoapFreeAndNilArray(pointer(FeventValue), TypeInfo(eventValueArray));
  inherited;
end;

{ statisticValues }

destructor statisticValues.destroy;
begin
  IdSoapFreeAndNilArray(pointer(FstatisticValue), TypeInfo(statisticValueArray));
  inherited;
end;

{ statisticSubscriptions }

destructor statisticSubscriptions.destroy;
begin
  IdSoapFreeAndNilArray(pointer(FstatisticSubscription), TypeInfo(statisticSubscriptionArray));
  inherited;
end;

{ actions }

destructor actions.destroy;
begin
  IdSoapFreeAndNilArray(pointer(Faction), TypeInfo(TStringArray));
  inherited;
end;

{ statisticType }

destructor statisticType.destroy;
begin
  IdSoapFreeAndNilArray(pointer(FobjectType), TypeInfo(objectTypeArray));
  inherited;
end;

{ configurationRequest }

destructor configurationRequest.destroy;
begin
  IdSoapFreeAndNilArray(pointer(Fattribute), TypeInfo(TStringArray));
  inherited;
end;


function GetIstat(AClient : TIdSoapBaseSender; ASetUrl : Boolean = true) : Istat;
begin
  if ASetURL and (AClient is TIdSoapWebClient) then
    begin
    (AClient as TIdSoapWebClient).SoapURL := 'http://astro:8080/gis/services/statservice/soap-1';
    end;
  result := IdSoapD4Interface(AClient) as Istat;
end;

Initialization
  IdSoapRegisterType(TypeInfo(parameterArray), '', TypeInfo(parameter));
  IdSoapRegisterType(TypeInfo(parameter));
  IdSoapRegisterType(TypeInfo(parameters));
  IdSoapRegisterProperty('parameters', 'parameter',
                   IdSoapFieldProp(@parameters(nil).Fparameter),
                   IdSoapFieldProp(@parameters(nil).Fparameter),
                   TypeInfo(parameterArray));
  IdSoapRegisterType(TypeInfo(timeProfileArray), '', TypeInfo(timeProfile_));
  IdSoapRegisterType(TypeInfo(timeProfile_));
  IdSoapRegisterType(TypeInfo(timeProfiles));
  IdSoapRegisterProperty('timeProfiles', 'timeProfile',
                   IdSoapFieldProp(@timeProfiles(nil).FtimeProfile),
                   IdSoapFieldProp(@timeProfiles(nil).FtimeProfile),
                   TypeInfo(timeProfileArray));
  IdSoapRegisterType(TypeInfo(statisticTypeInfoTypeArray), '', TypeInfo(statisticTypeInfoType));
  IdSoapRegisterType(TypeInfo(eventValueTypeType));
  IdSoapRegisterType(TypeInfo(statisticTypeInfoType));
  IdSoapRegisterProperty('statisticTypeInfoType', 'objectType',
                   IdSoapFieldProp(@statisticTypeInfoType(nil).FobjectType),
                   IdSoapFieldProp(@statisticTypeInfoType(nil).FobjectType),
                   TypeInfo(objectTypeArray));
  IdSoapRegisterType(TypeInfo(statisticInfos));
  IdSoapRegisterProperty('statisticInfos', 'statisticTypeInfo',
                   IdSoapFieldProp(@statisticInfos(nil).FstatisticTypeInfo),
                   IdSoapFieldProp(@statisticInfos(nil).FstatisticTypeInfo),
                   TypeInfo(statisticTypeInfoTypeArray));
  IdSoapRegisterType(TypeInfo(profileInfo));
  IdSoapRegisterType(TypeInfo(retrieveStatisticalProfileResponse));
  IdSoapRegisterType(TypeInfo(statisticalProfileType));
  IdSoapRegisterType(TypeInfo(retrieveStatisticResponse));
  IdSoapRegisterType(TypeInfo(statisticValueArray), '', TypeInfo(statisticValue));
  IdSoapRegisterType(TypeInfo(eventValueArray), '', TypeInfo(eventValue));
  IdSoapRegisterType(TypeInfo(eventValue));
  IdSoapRegisterType(TypeInfo(statisticValue));
  IdSoapRegisterProperty('statisticValue', 'eventValue',
                   IdSoapFieldProp(@statisticValue(nil).FeventValue),
                   IdSoapFieldProp(@statisticValue(nil).FeventValue),
                   TypeInfo(eventValueArray));
  IdSoapRegisterType(TypeInfo(statisticValues));
  IdSoapRegisterProperty('statisticValues', 'statisticValue',
                   IdSoapFieldProp(@statisticValues(nil).FstatisticValue),
                   IdSoapFieldProp(@statisticValues(nil).FstatisticValue),
                   TypeInfo(statisticValueArray));
  IdSoapRegisterType(TypeInfo(retrieveSubscribedStatisticsResponse));
  IdSoapRegisterType(TypeInfo(statisticSubscriptionArray), '', TypeInfo(statisticSubscription));
  IdSoapRegisterType(TypeInfo(statisticSubscription));
  IdSoapRegisterType(TypeInfo(statisticSubscriptions));
  IdSoapRegisterProperty('statisticSubscriptions', 'statisticSubscription',
                   IdSoapFieldProp(@statisticSubscriptions(nil).FstatisticSubscription),
                   IdSoapFieldProp(@statisticSubscriptions(nil).FstatisticSubscription),
                   TypeInfo(statisticSubscriptionArray));
  IdSoapRegisterType(TypeInfo(notificationModeEnum));
  IdSoapRegisterType(TypeInfo(schedule));
  IdSoapRegisterType(TypeInfo(timeRangeType));
  IdSoapRegisterType(TypeInfo(timeIntervalType));
  IdSoapRegisterType(TypeInfo(timeInterval));
  IdSoapRegisterType(TypeInfo(actions));
  IdSoapRegisterProperty('actions', 'action',
                   IdSoapFieldProp(@actions(nil).Faction),
                   IdSoapFieldProp(@actions(nil).Faction),
                   TypeInfo(TStringArray));
  IdSoapRegisterType(TypeInfo(objectTypeArray), '', TypeInfo(objectType));
  IdSoapRegisterType(TypeInfo(objectType));
  IdSoapRegisterType(TypeInfo(statisticType));
  IdSoapRegisterProperty('statisticType', 'objectType',
                   IdSoapFieldProp(@statisticType(nil).FobjectType),
                   IdSoapFieldProp(@statisticType(nil).FobjectType),
                   TypeInfo(objectTypeArray));
  IdSoapRegisterType(TypeInfo(metric));
  IdSoapRegisterType(TypeInfo(objectIdType));
  IdSoapRegisterType(TypeInfo(statistic));
  IdSoapRegisterType(TypeInfo(retrieveConfigurationResponse));
  IdSoapRegisterType(TypeInfo(rfc2254));
  IdSoapRegisterType(TypeInfo(configurationRequest));
  IdSoapRegisterProperty('configurationRequest', 'attribute',
                   IdSoapFieldProp(@configurationRequest(nil).Fattribute),
                   IdSoapFieldProp(@configurationRequest(nil).Fattribute),
                   TypeInfo(TStringArray));
  IdSoapRegisterType(TypeInfo(requestReference));
  IdSoapRegisterType(TypeInfo(loginResponse));
  IdSoapRegisterType(TypeInfo(modeEnum));
  IdSoapRegisterType(TypeInfo(notification));
  IdSoapRegisterType(TypeInfo(identity));
End.
