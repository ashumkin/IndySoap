Unit dimedoc;

{---------------------------------------------------------------------------
This file generated by the IndySoap WSDL -> Pascal translator

Source:   file:dime-doc.wsdl
Date:     7/7/2003 17:19:59
IndySoap: V1.00
---------------------------------------------------------------------------}

Interface

Uses
  Classes,
  IdSoapClient,
  IdSoapTypeRegistry;

Type
  TReferencedBinary = type TIdSoapAttachment;
  TReferencedText = type TIdSoapAttachment;

  TReferencedBinaryArray = array of TReferencedBinary;

{!
  Name: In_ = In;
  Name: Out_ = Out;
  Type: TReferencedBinary = ReferencedBinary in http://soapinterop.org/attachments/xsd;
  Type: TReferencedBinaryArray = ReferencedBinaryArray in http://soapinterop.org/attachments/xsd;
  Type: TReferencedText = ReferencedText in http://soapinterop.org/attachments/xsd;
}

type
  {Soap Address for this Interface: http://localhost/test}
  IAttTest = Interface (IIdSoapInterface) ['{22A886F2-A19D-4B4A-9BCC-3C3A36C9D9ED}']
       {!Namespace: http://soapinterop.org/attachments/wsdl;
         SoapAction: http://soapinterop.org/attachments/;
         Encoding: Document;
         Attachments: Dime}
    procedure EchoAttachment(In_ : TReferencedBinary; out Out_ : TReferencedBinary); stdcall;
    procedure EchoAttachments(var Item : TReferencedBinaryArray); stdcall;
    procedure EchoAttachmentAsBase64(In_ : TReferencedBinary; out Out_ : TStream); stdcall;
    procedure EchoBase64AsAttachment(In_ : TStream; out Out_ : TReferencedBinary); stdcall;
    procedure EchoUnrefAttachments; stdcall;
    procedure EchoAttachmentAsString(In_ : TReferencedText; out Out_ : String); stdcall;
  end;

function GetIAttTest(AClient : TIdSoapBaseSender; ASetUrl : Boolean = true) : IAttTest;

Implementation

{$R dimedoc.res}

Uses
  IdSoapRTTIHelpers,
  IdSoapUtilities,
  SysUtils;


function GetIAttTest(AClient : TIdSoapBaseSender; ASetUrl : Boolean = true) : IAttTest;
begin
  if ASetURL and (AClient is TIdSoapWebClient) then
    begin
    (AClient as TIdSoapWebClient).SoapURL := 'http://localhost/test';
    end;
  result := IdSoapD4Interface(AClient) as IAttTest;
end;

Initialization
  IdSoapRegisterType(TypeInfo(TReferencedBinary));
  IdSoapRegisterType(TypeInfo(TReferencedBinaryArray), '', TypeInfo(TReferencedBinary));
  IdSoapRegisterType(TypeInfo(TReferencedText));
End.
