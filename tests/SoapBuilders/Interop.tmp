Unit Interop;

{---------------------------------------------------------------------------
This file generated by the IndySoap WSDL -> Pascal translator

Source:   file://SoapBuilders/Interop.wsdl
Date:     29/05/2013 12:15:30 PM
IndySoap: V1.00
---------------------------------------------------------------------------}

Interface

Uses
  Classes,
  IdSoapClient,
  IdSoapDateTime,
  IdSoapRpcPacket,
  IdSoapTypeRegistry;

Type

  SOAPStruct = class;

  ArrayOffloat = array of Single;
  ArrayOfint = array of Integer;
  ArrayOfSOAPStruct = array of SOAPStruct;
  ArrayOfstring = array of String;

  SOAPStruct = class (TIdBaseSoapableClass)
  Private
    FvarString : String;
    FvarInt : Integer;
    FvarFloat : Single;
  Published
    property varString : String read FvarString write FvarString;
    property varInt : Integer read FvarInt write FvarInt;
    property varFloat : Single read FvarFloat write FvarFloat;
  end;


{!
  Type: ArrayOffloat = in http://soapinterop.org/xsd;
  Type: ArrayOfint = in http://soapinterop.org/xsd;
  Type: ArrayOfSOAPStruct = in http://soapinterop.org/xsd;
  Type: ArrayOfstring = in http://soapinterop.org/xsd;
  Type: SOAPStruct = in http://soapinterop.org/xsd;
}

type
  {Soap Address for this Interface: http://localhost/soap/}
  Interop = Interface (IIdSoapInterface) ['{FC11ADEE-B440-4724-863F-4E225AF15333}']
       {!Namespace: http://soapinterop.org/}
    function  echoString(inputString : String) : String; stdcall;
      {!Request: echoString; }
    function  echoStringArray(inputStringArray : ArrayOfstring) : ArrayOfstring; stdcall;
      {!Request: echoStringArray; }
    function  echoInteger(inputInteger : Integer) : Integer; stdcall;
      {!Request: echoInteger; }
    function  echoIntegerArray(inputIntegerArray : ArrayOfint) : ArrayOfint; stdcall;
      {!Request: echoIntegerArray; }
    function  echoFloat(inputFloat : Single) : Single; stdcall;
      {!Request: echoFloat; }
    function  echoFloatArray(inputFloatArray : ArrayOffloat) : ArrayOffloat; stdcall;
      {!Request: echoFloatArray; }
    function  echoStruct(inputStruct : SOAPStruct) : SOAPStruct; stdcall;
      {!Request: echoStruct; }
    function  echoStructArray(inputStructArray : ArrayOfSOAPStruct) : ArrayOfSOAPStruct; stdcall;
      {!Request: echoStructArray; }
    procedure echoVoid; stdcall;
      {!Request: echoVoid; }
    function  echoBase64(inputBase64 : TStream) : TStream; stdcall;
      {!Request: echoBase64; }
    function  echoDate(inputDate : TIdSoapDateTime) : TIdSoapDateTime; stdcall;
      {!Request: echoDate; }
  end;

function GetInterop(AClient : TIdSoapBaseSender; ASetUrl : Boolean = true) : Interop;

Implementation

Uses
  IdSoapRTTIHelpers,
  IdSoapUtilities,
  SysUtils;


function GetInterop(AClient : TIdSoapBaseSender; ASetUrl : Boolean = true) : Interop;
begin
  if ASetURL and (AClient is TIdSoapWebClient) then
    begin
    (AClient as TIdSoapWebClient).SoapURL := 'http://localhost/soap/';
    end;
  result := IdSoapD4Interface(AClient) as Interop;
end;

Initialization
  IdSoapRegisterType(TypeInfo(ArrayOffloat), '', TypeInfo(Single));
  IdSoapRegisterType(TypeInfo(ArrayOfint), '', TypeInfo(Integer));
  IdSoapRegisterType(TypeInfo(ArrayOfSOAPStruct), '', TypeInfo(SOAPStruct));
  IdSoapRegisterType(TypeInfo(ArrayOfstring), '', TypeInfo(String));
  IdSoapRegisterType(TypeInfo(SOAPStruct));
End.
